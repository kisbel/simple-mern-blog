{"ast":null,"code":"var _jsxFileName = \"/Users/kespinal/Desktop/wyncode/simple-mern-blog/client/src/components/articles/ArticleForm.jsx\";\nimport React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport Form from 'react-bootstrap/Form';\n\nconst ArticleForm = props => {\n  const initialState = {\n    title: '',\n    text: ''\n  };\n  const [values, setValues] = useState(initialState);\n\n  const handleSubmit = e => {\n    //prevent HTML default submission\n    e.preventDefault(); //POST request to RESTful route (to be defined in backend)\n\n    fetch('/articles', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(values)\n    }).then(response => {\n      console.log(response.ok);\n\n      if (response.ok) {\n        //let the user know that it went through\n        alert('Article successfully created'); //when we get confirmation we can reset the form to its original state (empty)\n\n        return response.json().then(article => {\n          props.history.push(`/articles/${article._id}`);\n        });\n      }\n    }).catch(error => alert(error));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Title of your article...\",\n    required: true,\n    onChange: e => setValues({ ...values,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"Text\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"textarea\",\n    rows: \"55\",\n    placeholder: \"Text for your article...\",\n    required: true,\n    onChange: e => setValues({ ...values,\n      text: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Submit\")));\n};\n\nexport default ArticleForm;","map":{"version":3,"sources":["/Users/kespinal/Desktop/wyncode/simple-mern-blog/client/src/components/articles/ArticleForm.jsx"],"names":["React","useState","Button","Form","ArticleForm","props","initialState","title","text","values","setValues","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","console","log","ok","alert","json","article","history","push","_id","catch","error","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAE3B,QAAMC,YAAY,GAAG;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,IAAI,EAAE;AAAnB,GAArB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAACK,YAAD,CAApC;;AAEA,QAAMK,YAAY,GAAGC,CAAC,IAAI;AACtB;AACAA,IAAAA,CAAC,CAACC,cAAF,GAFsB,CAItB;;AACAC,IAAAA,KAAK,CAAC,WAAD,EAAc;AACfC,MAAAA,MAAM,EAAE,MADO;AAEfC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFM;AAGfC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,MAAf;AAHS,KAAd,CAAL,CAKCW,IALD,CAKMC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,EAArB;;AACA,UAAIH,QAAQ,CAACG,EAAb,EAAiB;AACb;AACAC,QAAAA,KAAK,CAAC,8BAAD,CAAL,CAFa,CAGb;;AACA,eAAQJ,QAAQ,CAACK,IAAT,GACPN,IADO,CACFO,OAAO,IAAI;AAEjBtB,UAAAA,KAAK,CAACuB,OAAN,CAAcC,IAAd,CAAoB,aAAYF,OAAO,CAACG,GAAI,EAA5C;AACD,SAJS,CAAR;AAKH;AACJ,KAjBD,EAkBCC,KAlBD,CAkBOC,KAAK,IAAIP,KAAK,CAACO,KAAD,CAlBrB;AAmBH,GAxBD;;AA2BA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAErB,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,0BAFhB;AAGI,IAAA,QAAQ,EAAE,IAHd;AAII,IAAA,QAAQ,EAAEC,CAAC,IAAIF,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYF,MAAAA,KAAK,EAAEK,CAAC,CAACqB,MAAF,CAASC;AAA5B,KAAD,CAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFJ,eAYI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,oBAAC,IAAD,CAAM,OAAN;AACI,IAAA,EAAE,EAAC,UADP;AAEI,IAAA,IAAI,EAAC,IAFT;AAGI,IAAA,WAAW,EAAC,0BAHhB;AAII,IAAA,QAAQ,EAAE,IAJd;AAKI,IAAA,QAAQ,EAAEtB,CAAC,IAAIF,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYD,MAAAA,IAAI,EAAEI,CAAC,CAACqB,MAAF,CAASC;AAA3B,KAAD,CAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAZJ,eAuBI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBJ,CADJ,CADJ;AAkCH,CAlED;;AAoEA,eAAe9B,WAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Button } from 'react-bootstrap'\nimport Form from 'react-bootstrap/Form'\n\n\nconst ArticleForm = (props) => {\n   \n    const initialState = { title: '', text: ''}\n    const [values, setValues] = useState(initialState)\n\n    const handleSubmit = e => {\n        //prevent HTML default submission\n        e.preventDefault()\n\n        //POST request to RESTful route (to be defined in backend)\n        fetch('/articles', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(values)\n        })\n        .then(response => {\n            console.log(response.ok)\n            if (response.ok) {\n                //let the user know that it went through\n                alert('Article successfully created')\n                //when we get confirmation we can reset the form to its original state (empty)\n                return  response.json()\n                .then(article => {\n                \n                props.history.push(`/articles/${article._id}`)\n              })\n            }\n        })\n        .catch(error => alert(error))\n    }\n\n\n    return (\n        <div>\n            <Form onSubmit={handleSubmit}>\n\n                <Form.Group>\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Title of your article...\" \n                        required={true}\n                        onChange={e => setValues({...values, title: e.target.value})}\n                    />\n                </Form.Group>\n\n                <Form.Group>\n                    <Form.Label>Text</Form.Label>\n                    <Form.Control \n                        as=\"textarea\" \n                        rows=\"55\" \n                        placeholder=\"Text for your article...\" \n                        required={true}\n                        onChange={e => setValues({...values, text: e.target.value})}    \n                    />\n                </Form.Group>\n\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n\n            </Form>\n\n\n        </div>\n    )\n}\n\nexport default ArticleForm\n"]},"metadata":{},"sourceType":"module"}